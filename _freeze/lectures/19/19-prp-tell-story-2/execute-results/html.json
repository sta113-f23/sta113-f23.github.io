{
  "hash": "cb1abde9e08c5a50d1ee76789559fde2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Presentation ready plots 2:<br>Telling a story\"\nsubtitle: Lecture 19\nformat: \n  revealjs:\n    fig-align: center\n    fig-width: 5\n    fig-asp: 0.618\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm-up\n\n## Announcements {.smaller}\n\n-   Project 2 presentations in class on Thursday – food preference?\n\n-   Any questions?\n\n## Exam 2 redo (optional) {.smaller}\n\n-   **Due:** Monday 12/11 at 5 pm\n-   Take home:\n    -   Message me on Slack to let me know if you want to work on this.\n    -   Work in `exam-2-redo.qmd`, this is a copy of your exam submission, without any changes I might have implemented to get it to render -- do not overwrite `exam-2.qmd`.\n-   In class:\n    -   Write/type up corrections + reasoning for corrections (even for questions that didn't originally ask for reasoning) on a separate piece of paper.\n    -   Return original exam + redo together at my office (slide under door if I'm not there).\n-   Improve your answers [**working on your own**]{.underline}. The same rules as the exam applies.\n-   You will be eligible to receive up to 50% of the points you missed on each portion of the exam.\n\n## Code review\n\n-   Clone your assigned team's project and (try to) render it\n-   First, review the organization of the project/repo\n-   Then, review the code and open issues associated with any lines of code you want to make specific comments about \\[DEMO\\]\n-   Finally, fill out the \"Code review\" issue\n-   Be critical, but constructive\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_74806273\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">25</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Setup {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(fs)\nlibrary(openintro)\nlibrary(glue)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))\n```\n:::\n\n\n# Animation (as requested)\n\n## Philosophy\n\n-   The purpose of interactivity is to display more than can be achieved with persistent plot elements, and to invite the reader to engage with the plot.\n\n-   Animation allows more information to be displayed, but developer keeps control\n\n-   Beware that it is easy to forget what was just displayed, so keeping some elements persistent, maybe faint, can be useful for the reader\n\n## **gganimate**\n\n-   **gganimate** extends the grammar of graphics as implemented by ggplot2 to include the description of animation\n\n-   It provides a range of new grammar classes that can be added to the plot object in order to customize how it should change with time\n\n## How does gganimate work?\n\n-   Start with a ggplot2 specification\n\n-   Add layers with graphical primitives (geoms)\n\n-   Add formatting specification\n\n-   Add animation specification\n\n## Grammar of animation\n\n-   Transitions: `transition_*()` defines how the data should be spread out and how it relates to itself across time\n\n-   Views: `view_*()` defines how the positional scales should change along the animation\n\n-   Shadows: `shadow_*()` defines how data from other points in time should be presented in the given point in time\n\n-   Entrances/Exits: `enter_*()`/`exit_*()` defines how new data should appear and how old data should disappear during the course of the animation\n\n-   Easing: `ease_aes()` defines how different aesthetics should be eased during transitions\n\n## Learn more\n\n-   STA 313 lecture on animation: <https://vizdata.org/slides/23/23-animation#/animation>\n\n-   gganimate vignette: <https://gganimate.com/articles/gganimate.html>\n\n# Themes\n\n## Complete themes {.smaller}\n\n\n::: {.cell layout-ncol=\"3\"}\n\n```{.r .cell-code}\np <- ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n\np + theme_gray() + labs(title = \"Gray\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-3-1.png){width=480}\n:::\n\n```{.r .cell-code}\np + theme_void() + labs(title = \"Void\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-3-2.png){width=480}\n:::\n\n```{.r .cell-code}\np + theme_dark() + labs(title = \"Dark\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-3-3.png){width=480}\n:::\n:::\n\n\n## Themes from ggthemes {.smaller}\n\n\n::: {.cell layout-ncol=\"3\"}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\np + theme_fivethirtyeight() + labs(title = \"FiveThirtyEight\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-4-1.png){width=480}\n:::\n\n```{.r .cell-code}\np + theme_economist() + labs(title = \"Economist\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-4-2.png){width=480}\n:::\n\n```{.r .cell-code}\np + theme_wsj() + labs(title = \"Wall Street Journal\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-4-3.png){width=480}\n:::\n:::\n\n\n## Themes and color scales from ggthemes {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np + \n  aes(color = species) +\n  scale_color_wsj() +\n  theme_wsj() + \n  labs(title = \"Wall Street Journal\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Modifying theme elements {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\np + \n  labs(title = \"Palmer penguins\") +\n  theme(\n    plot.title = element_text(color = \"red\", face = \"bold\", family = \"Comic Sans MS\"),\n    plot.background = element_rect(color = \"red\", fill = \"mistyrose\")\n  )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-6-1.png){width=480}\n:::\n:::\n\n\n# Axes\n\n## Presidential terms {.smaller}\n\n::: task\nHow can the following figure be improved with custom breaks in axes, if at all?\n:::\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(presidential, aes(x = start, xend = end, y = name, yend = name)) +\n  geom_segment()\n```\n:::\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npresidential\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   name       start      end        party     \n   <chr>      <date>     <date>     <chr>     \n 1 Eisenhower 1953-01-20 1961-01-20 Republican\n 2 Kennedy    1961-01-20 1963-11-22 Democratic\n 3 Johnson    1963-11-22 1969-01-20 Democratic\n 4 Nixon      1969-01-20 1974-08-09 Republican\n 5 Ford       1974-08-09 1977-01-20 Republican\n 6 Carter     1977-01-20 1981-01-20 Democratic\n 7 Reagan     1981-01-20 1989-01-20 Republican\n 8 Bush       1989-01-20 1993-01-20 Republican\n 9 Clinton    1993-01-20 2001-01-20 Democratic\n10 Bush       2001-01-20 2009-01-20 Republican\n11 Obama      2009-01-20 2017-01-20 Democratic\n12 Trump      2017-01-20 2021-01-20 Republican\n```\n\n\n:::\n:::\n\n:::\n\n## Context matters: y-axis breaks\n\n\n::: {.cell}\n\n```{.r .cell-code}\npresidential |>\n  mutate(name = fct_reorder(name, start)) |>\n  ggplot(aes(x = start, xend = end, y = name, yend = name)) +\n  geom_segment()\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-10-1.png){width=480}\n:::\n:::\n\n\n## Context matters: y-axis breaks\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\npresidential |>\n  mutate(\n    name = case_when(\n      name == \"Bush\" & year(start) == 1989 ~ \"Bush I\",\n      name == \"Bush\" & year(start) == 2001 ~ \"Bush II\",\n      .default = name\n    ),\n    name = fct_reorder(name, start)\n  ) |>\n  ggplot(aes(x = start, xend = end, y = name, yend = name)) +\n  geom_segment()\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-11-1.png){width=768}\n:::\n:::\n\n\n## Context matters: x-axis breaks\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\npresidential <- presidential |>\n  mutate(\n    name = case_when(\n      name == \"Bush\" & year(start) == 1989 ~ \"Bush I\",\n      name == \"Bush\" & year(start) == 2001 ~ \"Bush II\",\n      .default = name\n    ),\n    name = fct_reorder(name, start),\n    start = year(start),\n    end = year(end)\n  )\n\nggplot(\n  presidential,\n  aes(x = start, xend = end, y = name, yend = name)\n  ) +\n  geom_segment() +\n  scale_x_continuous(\n    breaks = seq(from = 1952, to = 2020, by = 4),\n    minor_breaks = NULL\n  )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-12-1.png){width=768}\n:::\n:::\n\n\n## Colors matter\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nggplot(\n  presidential,\n  aes(x = start, xend = end, y = name, yend = name,\n      color = party)\n  ) +\n  geom_segment(show.legend = FALSE) +\n  scale_x_continuous(\n    breaks = seq(from = 1952, to = 2020, by = 4),\n    minor_breaks = NULL\n  ) +\n  scale_color_manual(\n    values = c(\n      \"Democratic\" = \"blue\",\n      \"Republican\" = \"red\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-13-1.png){width=768}\n:::\n:::\n\n\n## Precision matters\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nggplot(\n  presidential,\n  aes(x = start, xend = end, y = name, yend = name, color = party)\n  ) +\n  geom_segment(show.legend = FALSE) +\n  scale_x_continuous(\n    breaks = seq(from = 1952, to = 2020, by = 4),\n    minor_breaks = NULL\n  ) +\n  scale_color_manual(\n    values = c(\n      \"Democratic\" = \"blue\",\n      \"Republican\" = \"red\"\n    )\n  ) +\n  labs(x = \"Election year\", y = \"President\")\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-14-1.png){width=768}\n:::\n:::\n\n\n# Annotation\n\n## Why annotate?\n\n![](images/stocks.png)\n\n::: aside\n<https://bl.ocks.org/susielu/23dc3082669ee026c552b85081d90976>\n:::\n\n## `geom_text()` {.smaller}\n\nCan be useful when individual observations are identifiable, but can also get overwhelming...\n\n::: task\nHow would you improve this visualization?\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(state_stats, aes(x = homeownership, y = pop2010)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-15-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(state_stats, aes(x = homeownership, y = pop2010)) + \n  geom_text(aes(label = abbr))\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-16-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n## All of the data doesn't tell a story\n\n![](images/recession-1.png){fig-align=\"center\" width=\"800\"}\n\n::: aside\n[How the Recession Reshaped the Economy, in 255 Charts](https://www.nytimes.com/interactive/2014/06/05/upshot/how-the-recession-reshaped-the-economy-in-255-charts.html), NY Times (2014)\n:::\n\n## \n\n![](images/recession-2.png){fig-align=\"center\" width=\"900\"}\n\n::: aside\n[How the Recession Reshaped the Economy, in 255 Charts](https://www.nytimes.com/interactive/2014/06/05/upshot/how-the-recession-reshaped-the-economy-in-255-charts.html), NY Times (2014)\n:::\n\n## \n\n![](images/recession-3.png){fig-align=\"center\" width=\"900\"}\n\n::: aside\n[How the Recession Reshaped the Economy, in 255 Charts](https://www.nytimes.com/interactive/2014/06/05/upshot/how-the-recession-reshaped-the-economy-in-255-charts.html), NY Times (2014)\n:::\n\n## Highlighting in ggplot2\n\nWe have (at least) two options:\n\n1.  Native ggplot2 -- use layers\n\n2.  gghighlight: <https://yutannihilation.github.io/gghighlight/articles/gghighlight.html>\n\n## Data: SF AQI {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_files <- fs::dir_ls(here::here(\"data/san-francisco\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsf <- read_csv(sf_files, na = c(\".\", \"\"))\n\nsf <- sf |>\n  janitor::clean_names() |>\n  mutate(date = mdy(date)) |>\n  arrange(date) |>\n  select(date, aqi_value)\n\nsf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,557 × 2\n   date       aqi_value\n   <date>         <dbl>\n 1 2016-01-01        32\n 2 2016-01-02        37\n 3 2016-01-03        45\n 4 2016-01-04        33\n 5 2016-01-05        27\n 6 2016-01-06        39\n 7 2016-01-07        39\n 8 2016-01-08        31\n 9 2016-01-09        20\n10 2016-01-10        20\n# ℹ 2,547 more rows\n```\n\n\n:::\n:::\n\n\n## Data prep {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3|4\"}\nsf <- sf |>\n  mutate(\n    year = year(date),\n    day_of_year = yday(date)\n  )\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n# check\nsf |>\n  filter(day_of_year < 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 4\n   date       aqi_value  year day_of_year\n   <date>         <dbl> <dbl>       <dbl>\n 1 2016-01-01        32  2016           1\n 2 2016-01-02        37  2016           2\n 3 2017-01-01        55  2017           1\n 4 2017-01-02        36  2017           2\n 5 2018-01-01        87  2018           1\n 6 2018-01-02        95  2018           2\n 7 2019-01-01        33  2019           1\n 8 2019-01-02        50  2019           2\n 9 2020-01-01        53  2020           1\n10 2020-01-02        43  2020           2\n11 2021-01-01        79  2021           1\n12 2021-01-02        57  2021           2\n13 2022-01-01        53  2022           1\n14 2022-01-02        55  2022           2\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Plot AQI over years\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-22-1.png){width=480}\n:::\n:::\n\n\n## Plot AQI over years\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year, color = year)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-23-1.png){width=480}\n:::\n:::\n\n\n## Plot AQI over years\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year, color = factor(year))) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-24-1.png){width=480}\n:::\n:::\n\n\n## Highlight 2016 {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3\"}\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year)) +\n  geom_line(color = \"gray\") +\n  geom_line(data = sf |> filter(year == 2016), color = \"red\") +\n  labs(\n    title = \"AQI levels in SF in 2016\",\n    subtitle = \"Versus all years 2016 - 2022\",\n    x = \"Day of year\", y = \"AQI value\"\n    )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-25-1.png){width=480}\n:::\n:::\n\n\n## Highlight 2017 {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year)) +\n  geom_line(color = \"gray\") +\n  geom_line(data = sf |> filter(year == 2017), color = \"red\") +\n  labs(\n    title = \"AQI levels in SF in 2017\",\n    subtitle = \"Versus all years 2016 - 2022\",\n    x = \"Day of year\", y = \"AQI value\"\n    )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-26-1.png){width=480}\n:::\n:::\n\n\n## Highlight 2018 {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year)) +\n  geom_line(color = \"gray\") +\n  geom_line(data = sf |> filter(year == 2018), color = \"red\") +\n  labs(\n    title = \"AQI levels in SF in 2018\",\n    subtitle = \"Versus all years 2016 - 2022\",\n    x = \"Day of year\", y = \"AQI value\"\n    )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-27-1.png){width=480}\n:::\n:::\n\n\n## Highlight any year {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|5|7\"}\nyear_to_highlight <- 2018\n\nggplot(sf, aes(x = day_of_year, y = aqi_value, group = year)) +\n  geom_line(color = \"gray\") +\n  geom_line(data = sf |> filter(year == year_to_highlight), color = \"red\") +\n  labs(\n    title = glue(\"AQI levels in SF in {year_to_highlight}\"),\n    subtitle = \"Versus all years 2016 - 2022\",\n    x = \"Day of year\", y = \"AQI value\"\n    )\n```\n\n::: {.cell-output-display}\n![](19-prp-tell-story-2_files/figure-revealjs/unnamed-chunk-28-1.png){width=480}\n:::\n:::\n\n\n# Quarto\n\n## Quarto tips\n\n-   Figures and tables\n\n-   Cross references\n\n-   Bibliography\n\n-   Slides\n",
    "supporting": [
      "19-prp-tell-story-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}