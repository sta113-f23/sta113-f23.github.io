{
  "hash": "d81155a184309ee0887034ae33015cd5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing and modeling relationships III\"\nsubtitle: Lecture 12\nformat: \n  revealjs:\n    fig-align: center\n    fig-width: 5\n    fig-asp: 0.618\n---\n\n\n# Warm-up\n\n## Announcements\n\n-   HW 4 due next Thursday\n-   OH by appointment this week\n-   Thursday lecture on Zoom - link to be posted as Canvas announcement and on Slack\n\n## Today's goals\n\n-   Fit and interpret models for predicting (classifying) binary outcomes\n\n-   Define sensitivity, specificity, and ROC curves\n\n-   Visualize decision boundaries for classification models\n\n# Logistic regression\n\n## So far in regression\n\n::: incremental\n-   Outcome: Numerical, Predictor: One numerical or one categorical with only two levels $\\rightarrow$ Simple linear regression\n\n-   Outcome: Numerical, Predictors: Any number of numerical or categorical variables with any number of levels $\\rightarrow$ Multiple linear regression\n\n-   Outcome: Categorical with only two levels, Predictors: Any number of numerical or categorical variables with any number of levels $\\rightarrow$ Logistic regression\n\n-   Outcome: Categorical with any number of levels, Predictors: Any number of numerical or categorical variables with any number of levels $\\rightarrow$ Generalized linear models -- Not covered in STA 101\n:::\n\n## Data + packages {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nhp_spam <- read_csv(\"data/hp-spam.csv\")\n```\n:::\n\n\n-   4601 emails collected at Hewlett-Packard labs and contains 58 variables\n\n-   Outcome: `type`\n\n    -   `type = 1` is spam\n\n    -   `type = 0` is non-spam\n\n-   Predictors of interest:\n\n    -   `capitalTotal`: Number of capital letters in email\n\n    -   Percentages are calculated as (100 \\* number of times the WORD appears in the e-mail) / total number of words in email\n\n        -   `george`: Percentage of \"george\"s in email (these were George's emails)\n\n        -   `you`: Percentage of \"you\"s in email\n\n## Glimpse at data\n\n::: task\nWhat type of data is `type`? What type should it be in order to use logistic regression?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhp_spam |>\n  select(type, george, capitalTotal, you)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,601 × 4\n    type george capitalTotal   you\n   <dbl>  <dbl>        <dbl> <dbl>\n 1     1      0          278  1.93\n 2     1      0         1028  3.47\n 3     1      0         2259  1.36\n 4     1      0          191  3.18\n 5     1      0          191  3.18\n 6     1      0           54  0   \n 7     1      0          112  3.85\n 8     1      0           49  0   \n 9     1      0         1257  1.23\n10     1      0          749  1.67\n# ℹ 4,591 more rows\n```\n\n\n:::\n:::\n\n\n## EDA: How much spam?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhp_spam |>\n  count(type) |>\n  mutate(p = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n   type     n     p\n  <dbl> <int> <dbl>\n1     0  2788 0.606\n2     1  1813 0.394\n```\n\n\n:::\n:::\n\n\n## EDA: AM I SCREAMING? `capitalTotal`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hp_spam, aes(x = capitalTotal)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](12-vizualize-model-relationships-III_files/figure-revealjs/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n## EDA: `george`, is that `you`?\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nggplot(hp_spam, aes(x = george)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](12-vizualize-model-relationships-III_files/figure-revealjs/unnamed-chunk-5-1.png){width=480}\n:::\n\n```{.r .cell-code}\nggplot(hp_spam, aes(x = you)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](12-vizualize-model-relationships-III_files/figure-revealjs/unnamed-chunk-5-2.png){width=480}\n:::\n:::\n\n\n## Logistic regression\n\n-   Logistic regression takes in a number of predictors and outputs the probability of a \"success\" (an outcome of 1) in a **binary** outcome variable.\n\n-   The probability is related to the predictors via a **link function**,\n\n$$\np(y_i = 1) = \\frac{1}{1+\\text{exp}({- \\sum \\beta_i x_i })},\n$$ whose output is in $(0,1)$ (a probability).\n\n-   In this modeling scheme, one typically finds $\\hat{\\beta}$ by maximizing the **likelihood function**, another objective function, different than our previous \"least squares\" objective.\n\n## Logistic regression, visualized\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](12-vizualize-model-relationships-III_files/figure-revealjs/unnamed-chunk-6-1.png){width=480}\n:::\n:::\n\n\n## Using data to estimate $\\beta_i$\n\nTo proceed with building our email classifier, we will, as usual, use our data (outcome $y_i$ and predictor $x_i$ pairs), to estimate $\\beta$ (find $\\hat{\\beta}$) and obtain the model:\n\n$$\np(y_i = 1) = \\frac{1}{1+\\text{exp}({- \\sum  \\hat{\\beta}_i x_i})},\n$$\n\n## `ae-11-spam` {.smaller}\n\nUltimate goal: Recreate the following visualization.\n\n![](images/decision-regions-1.png)\n\n## `ae-11-spam` {.smaller}\n\nReminder of instructions for getting started with application exercises:\n\n::: task\n\n{{< fa user >}}\n\n\n\n-   Go to the course [GitHub org](https://github.com/sta113-f23) and find your `ae-11-spam` (repo name will be suffixed with your GitHub name).\n-   Click on the green **CODE** button, select **Use SSH** (this might already be selected by default, and if it is, you'll see the text **Clone with SSH**). Click on the clipboard icon to copy the repo URL.\n-   In RStudio, go to *File* ➛ *New Project* ➛*Version Control* ➛ *Git*.\n-   Copy and paste the URL of your assignment repo into the dialog box *Repository URL*. Again, please make sure to have *SSH* highlighted under *Clone* when you copy the address.\n-   Click *Create Project*, and the files from your GitHub repo will be displayed in the *Files* pane in RStudio.\n-   Click *ae-11-spam.qmd* to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n:::\n",
    "supporting": [
      "12-vizualize-model-relationships-III_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}