{
  "hash": "591c3acdfeb32fb3a4c8b26dea7894bd",
  "result": {
    "markdown": "---\ntitle: Grammar of data wrangling\nsubtitle: Lecture 5\nformat: revealjs\n---\n\n\n# Warm up\n\n## Reflection\n\n::: question\n{{< fa users >}} What is one thing you learned from your reading or videos that was \"new\" to you? And what is one question you have from the reading, videos, or material we've covered so far, including the previous application exercise?\n:::\n\n## Announcements\n\n-   HW 1 due today at 5 pm\n-   Subsequent HW deadlines adjusted accordingly for the first part of the semester\n-   Next week:\n    -   Tuesday: Project 1 workday\n    -   Thursday: Rubenstein Library rare collections visit\n\n## GitHub PATs on Posit Cloud\n\n-   In the Console, run `usethis::create_github_token()` to create a new PAT or grab the one you created previously from a space you might have safely stored it (e.g., 1Password or similar)\n-   In the Console, run `gitcreds::gitcreds_set()` and paste your PAT when prompted.\n-   In the Terminal, run `git config credential.helper store` to make sure your PAT persists throughout the whole time you're working on this assignment / Cloud project.\n\n# Grammar of data wrangling\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\n```\n:::\n\n\n## Data: Hotel bookings\n\n-   Data from two hotels: one resort and one city hotel\n\n-   Observations: Each row represents a hotel booking\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n```\n:::\n\n\n## Variables {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(hotels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n\n\n:::\n:::\n\n\n## `glimpse()` {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(hotels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 119,390\nColumns: 32\n$ hotel                          <chr> \"Resort Hotel\", \"Resort Hotel\", \"Resort…\n$ is_canceled                    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n$ lead_time                      <dbl> 342, 737, 7, 13, 14, 14, 0, 9, 85, 75, …\n$ arrival_date_year              <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 201…\n$ arrival_date_month             <chr> \"July\", \"July\", \"July\", \"July\", \"July\",…\n$ arrival_date_week_number       <dbl> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,…\n$ arrival_date_day_of_month      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stays_in_weekend_nights        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ stays_in_week_nights           <dbl> 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, …\n$ adults                         <dbl> 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ children                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ babies                         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ meal                           <chr> \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB…\n$ country                        <chr> \"PRT\", \"PRT\", \"GBR\", \"GBR\", \"GBR\", \"GBR…\n$ market_segment                 <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ distribution_channel           <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ is_repeated_guest              <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_cancellations         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_bookings_not_canceled <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ reserved_room_type             <chr> \"C\", \"C\", \"A\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ assigned_room_type             <chr> \"C\", \"C\", \"C\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ booking_changes                <dbl> 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ deposit_type                   <chr> \"No Deposit\", \"No Deposit\", \"No Deposit…\n$ agent                          <chr> \"NULL\", \"NULL\", \"NULL\", \"304\", \"240\", \"…\n$ company                        <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n$ days_in_waiting_list           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ customer_type                  <chr> \"Transient\", \"Transient\", \"Transient\", …\n$ adr                            <dbl> 0.00, 0.00, 75.00, 75.00, 98.00, 98.00,…\n$ required_car_parking_spaces    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ total_of_special_requests      <dbl> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 3, …\n$ reservation_status             <chr> \"Check-Out\", \"Check-Out\", \"Check-Out\", …\n$ reservation_status_date        <date> 2015-07-01, 2015-07-01, 2015-07-02, 20…\n```\n\n\n:::\n:::\n\n\n## Plan\n\nWe...\n\nhave a single data frame\n\nwant to slice it, and dice it, and juice it, and process it, so we can plot it\n\n## Grammar of data wrangling\n\n::: columns\n::: {.column width=\"50%\"}\n-   Start with a data frame\n-   And then (`|>`)\n-   Transform it with a function\n-   Result in a data frame\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  function(...)\n```\n:::\n\n:::\n:::\n\n## Commonly used data wrangling functions\n\n-   `distinct()`\n-   `select()`, `relocate()`\n-   `arrange()`, `arrange(desc())`\n-   `slice()`, `slice_head()`, `slice_tail()`, `slice_sample()`\n-   `filter()`\n-   `mutate()`\n-   `summarize()`, `count()`\n\n## `distcint()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  distinct(hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 1\n  hotel       \n  <chr>       \n1 Resort Hotel\n2 City Hotel  \n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  distinct(is_canceled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 1\n  is_canceled\n        <dbl>\n1           0\n2           1\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## `select()` / `relocate()` {.smaller}\n\n\n\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  select(hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 119,390 × 1\n   hotel       \n   <chr>       \n 1 Resort Hotel\n 2 Resort Hotel\n 3 Resort Hotel\n 4 Resort Hotel\n 5 Resort Hotel\n 6 Resort Hotel\n 7 Resort Hotel\n 8 Resort Hotel\n 9 Resort Hotel\n10 Resort Hotel\n# ℹ 119,380 more rows\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  relocate(is_canceled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 119,390 × 32\n   is_canceled hotel        lead_time\n         <dbl> <chr>            <dbl>\n 1           0 Resort Hotel       342\n 2           0 Resort Hotel       737\n 3           0 Resort Hotel         7\n 4           0 Resort Hotel        13\n 5           0 Resort Hotel        14\n 6           0 Resort Hotel        14\n 7           0 Resort Hotel         0\n 8           0 Resort Hotel         9\n 9           1 Resort Hotel        85\n10           1 Resort Hotel        75\n# ℹ 119,380 more rows\n# ℹ 29 more variables:\n#   arrival_date_year <dbl>,\n#   arrival_date_month <chr>,\n#   arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>,\n#   stays_in_weekend_nights <dbl>, …\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## `arrange()` / `arrange(desc())` {.smaller}\n\n\n\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  arrange(adr) |>\n  relocate(adr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 119,390 × 32\n     adr hotel     is_canceled lead_time\n   <dbl> <chr>           <dbl>     <dbl>\n 1 -6.38 Resort H…           0       195\n 2  0    Resort H…           0       342\n 3  0    Resort H…           0       737\n 4  0    Resort H…           0        32\n 5  0    Resort H…           0       111\n 6  0    Resort H…           0         0\n 7  0    Resort H…           0         8\n 8  0    Resort H…           0         8\n 9  0    Resort H…           1        57\n10  0    Resort H…           0        57\n# ℹ 119,380 more rows\n# ℹ 28 more variables:\n#   arrival_date_year <dbl>,\n#   arrival_date_month <chr>,\n#   arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>,\n#   stays_in_weekend_nights <dbl>, …\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  arrange(desc(adr)) |>\n  relocate(adr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 119,390 × 32\n     adr hotel     is_canceled lead_time\n   <dbl> <chr>           <dbl>     <dbl>\n 1 5400  City Hot…           1        35\n 2  510  City Hot…           0         0\n 3  508  Resort H…           0         1\n 4  452. City Hot…           0        81\n 5  450  Resort H…           1       378\n 6  437  Resort H…           1        59\n 7  426. Resort H…           0        31\n 8  402  Resort H…           0       104\n 9  397. Resort H…           0        26\n10  392  Resort H…           1       116\n# ℹ 119,380 more rows\n# ℹ 28 more variables:\n#   arrival_date_year <dbl>,\n#   arrival_date_month <chr>,\n#   arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>,\n#   stays_in_weekend_nights <dbl>, …\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## `slice()` {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |>\n  slice(1:4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 32\n  hotel        is_canceled lead_time arrival_date_year arrival_date_month\n  <chr>              <dbl>     <dbl>             <dbl> <chr>             \n1 Resort Hotel           0       342              2015 July              \n2 Resort Hotel           0       737              2015 July              \n3 Resort Hotel           0         7              2015 July              \n4 Resort Hotel           0        13              2015 July              \n# ℹ 27 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, …\n```\n\n\n:::\n:::\n\n\n## `slice_head()` / `slice_tail()`  {.smaller}\n\n\n\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  slice_head(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 32\n  hotel        is_canceled lead_time\n  <chr>              <dbl>     <dbl>\n1 Resort Hotel           0       342\n2 Resort Hotel           0       737\n3 Resort Hotel           0         7\n4 Resort Hotel           0        13\n5 Resort Hotel           0        14\n# ℹ 29 more variables:\n#   arrival_date_year <dbl>,\n#   arrival_date_month <chr>,\n#   arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>,\n#   stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, …\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  slice_tail(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 32\n  hotel      is_canceled lead_time\n  <chr>            <dbl>     <dbl>\n1 City Hotel           0        23\n2 City Hotel           0       102\n3 City Hotel           0        34\n4 City Hotel           0       109\n5 City Hotel           0       205\n# ℹ 29 more variables:\n#   arrival_date_year <dbl>,\n#   arrival_date_month <chr>,\n#   arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>,\n#   stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, …\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## `slice_sample()` {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  slice_sample(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 32\n  hotel      is_canceled lead_time arrival_date_year arrival_date_month\n  <chr>            <dbl>     <dbl>             <dbl> <chr>             \n1 City Hotel           0       127              2016 November          \n2 City Hotel           0        55              2015 August            \n3 City Hotel           0        84              2017 April             \n4 City Hotel           0       140              2015 November          \n5 City Hotel           0       307              2017 May               \n# ℹ 27 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, …\n```\n\n\n:::\n:::\n\n\n## `filter()` {.smaller}\n\n\n\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |>\n  filter(adr > 1000) |>\n  select(adr, hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n    adr hotel     \n  <dbl> <chr>     \n1  5400 City Hotel\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |> \n  filter(babies > 5) |>\n  select(adults, babies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  adults babies\n   <dbl>  <dbl>\n1      2     10\n2      1      9\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## `mutate()` {.smaller}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |>\n  mutate(people = adults + babies + children) |>\n  relocate(people) |>\n  arrange(desc(people))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 119,390 × 33\n   people hotel       is_canceled lead_time arrival_date_year arrival_date_month\n    <dbl> <chr>             <dbl>     <dbl>             <dbl> <chr>             \n 1     55 Resort Hot…           1       338              2015 October           \n 2     50 Resort Hot…           1       336              2015 September         \n 3     40 Resort Hot…           1       304              2015 September         \n 4     27 Resort Hot…           1       349              2015 September         \n 5     27 Resort Hot…           1       352              2015 September         \n 6     26 Resort Hot…           1       333              2015 September         \n 7     26 Resort Hot…           1       340              2015 September         \n 8     26 Resort Hot…           1       347              2015 September         \n 9     26 Resort Hot…           1       354              2015 September         \n10     26 Resort Hot…           1       361              2015 October           \n# ℹ 119,380 more rows\n# ℹ 27 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>, …\n```\n\n\n:::\n:::\n\n\n## `summarize()` {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |>\n  summarize(mean_adr = mean(adr))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_adr\n     <dbl>\n1     102.\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |>\n  group_by(hotel) |>\n  summarize(mean_adr = mean(adr))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  hotel        mean_adr\n  <chr>           <dbl>\n1 City Hotel      105. \n2 Resort Hotel     95.0\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## `count()` {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels |>\n  count(hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  hotel            n\n  <chr>        <int>\n1 City Hotel   79330\n2 Resort Hotel 40060\n```\n\n\n:::\n:::\n\n\n## Average cost of daily stay\n\n::: task\nWhat are the variables represented in this visualization?\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](05-grammar-of-data-wrangling_files/figure-revealjs/daily-stay-cost-1.png){width=960}\n:::\n:::\n\n\n# Application exercise\n\n## `ae-05` {.smaller}\n\n::: task\n\n{{< fa user >}}\n\n\n\n-   Go to the course [GitHub org](https://github.com/sta113-f23) and find your `ae-05-hotels` (repo name will be suffixed with your GitHub name).\n-   Clone the repo in Posit Cloud, and set up your PAT:\n    -   In the Console, run `usethis::create_github_token()` to create a new PAT or grab the one you created previously from a space you might have safely stored it (e.g., 1Password or similar)\n    -   In the Console, run `gitcreds::gitcreds_set()` and paste your PAT when prompted.\n    -   In the Terminal, run `git config credential.helper store` to make sure your PAT persists throughout the whole time you're working on this assignment / Cloud project.\n-   Open the Quarto document (`.qmd`) and follow along and complete the exercises.\n-   Render, commit, and push your edits as you work through it\n:::\n",
    "supporting": [
      "05-grammar-of-data-wrangling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}